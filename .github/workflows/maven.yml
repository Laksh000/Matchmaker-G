# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0.1
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Java
    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'
        cache: maven

    # Step 3: Enable Docker for Testcontainers
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 4: Wait for MongoDB to be ready
    - name: Wait for MongoDB
      run: |
        echo "Waiting for MongoDB to be ready..."
        for i in {1..30}; do
          if nc -z localhost 27017; then
            echo "MongoDB is ready!"
            exit 0
          fi
          sleep 2
        done
        echo "MongoDB did not start in time." >&2
        exit 1

    # Step 5: Run tests and build with Maven
    - name: Build and Test with Maven
      run: mvn -B verify --file pom.xml


    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
